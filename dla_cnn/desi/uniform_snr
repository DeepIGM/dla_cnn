def split_bins(data_array,num):
    """
    Split bins for snr_array,zdla_array,nhi_array
    -------------------------------------------------------------------------------------
    parametersï¼›
    data_array:np.ndarray
    num:int
    --------------------------------------------------------------------------------------
    return:
    bins_index : list
    """
    d=np.ptp(data_array)/num
    datamin=np.amin(data_array)
    bins_index=[]
    for ii in range(0,num):
        #bins_data.append(data_array[(data_array>=d*ii+datamin)&(data_array<=d*(ii+1)+datamin)])
        bins_index.append((data_array>=d*ii+datamin)&(data_array<=d*(ii+1)+datamin))
    
    return bins_index
    
def snr_uniform(snr,idarray,binnum,num,snrrange):
    """
    Uniform snr in snrrange
    Parameter
    ---------
    snr:np.ndarray
    idarray:np.ndarray
    binnum: int
    num:int
    snrrange:list
             lowest snr,highest snr
    
    Return
    ---------
    samplesnr_idï¼šnp.ndarray
    """
    new_snr=snr[(snr<=snrrange[1])&(snr>=snrrange[0])]
    new_id=idarray[(snr<=snrrange[1])&(snr>=snrrange[0])]
    snr_index=split_bins(new_snr,binnum)
    samplesnr_id=[]
    for jj in range(0,binnum):
        samplesnr_id.append(random.sample(list(new_id[snr_index[jj]]),num))
    samplesnr_id=np.array(samplesnr_id).ravel()
    return samplesnr_id
